[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "",
    "text": "Earthquakes are one of the most significant natural hazards, causing widespread destruction and loss of life. Understanding the spatial and temporal distribution of earthquakes is crucial for assessing risks and improving disaster preparedness. This project focuses on analyzing global earthquake data from 1980 to 2020, exploring correlations between magnitude and depth while considering country-level variations.\nKey questions addressed in this project include:\n\nWhat are the global hotspots for seismic activity?\nHow do earthquake magnitudes vary with depth across regions?\nWhich countries experience the highest frequency and intensity of earthquakes?\n\nBy leveraging advanced spatial and temporal analysis techniques, this project provides valuable insights into global earthquake patterns. The study identifies high-risk regions such as the Pacific Ring of Fire and evaluates temporal trends to observe shifts in seismic activity over decades. Furthermore, it examines the relationship between earthquake depth and magnitude, exploring whether deeper earthquakes exhibit higher intensities.\nInteractive maps, heatmaps, and statistical visualizations are employed to communicate these findings effectively. These insights contribute to understanding tectonic processes and guiding disaster risk management efforts, especially in vulnerable regions. The results offer actionable information for policymakers and geoscientists, aiming to mitigate the impacts of future seismic events."
  },
  {
    "objectID": "index.html#load-any-required-packages-in-a-code-chunk",
    "href": "index.html#load-any-required-packages-in-a-code-chunk",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Load any required packages in a code chunk",
    "text": "Load any required packages in a code chunk\n\nSys.setenv(PROJ_LIB = \"/opt/homebrew/Cellar/proj/9.5.1/share/proj\")\ninstall.packages(\"sf\")\n\n# Downloading packages -------------------------------------------------------\n- Downloading sf from CRAN ...                  OK [3.6 Mb in 0.22s]\n- Downloading classInt from CRAN ...            OK [487.3 Kb in 0.16s]\n- Downloading e1071 from CRAN ...               OK [582.2 Kb in 0.14s]\n- Downloading proxy from CRAN ...               OK [171.5 Kb in 0.18s]\n- Downloading s2 from CRAN ...                  OK [2.1 Mb in 0.2s]\n- Downloading wk from CRAN ...                  OK [1.7 Mb in 0.19s]\n- Downloading units from CRAN ...               OK [354.5 Kb in 0.17s]\nSuccessfully downloaded 7 packages in 2.9 seconds.\n\nThe following package(s) will be installed:\n- classInt [0.4-10]\n- e1071    [1.7-16]\n- proxy    [0.4-27]\n- s2       [1.1.7]\n- sf       [1.0-19]\n- units    [0.8-5]\n- wk       [0.9.4]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing proxy ...                          OK [installed binary and cached in 0.21s]\n- Installing e1071 ...                          OK [installed binary and cached in 0.22s]\n- Installing classInt ...                       OK [installed binary and cached in 0.22s]\n- Installing wk ...                             OK [installed binary and cached in 0.24s]\n- Installing s2 ...                             OK [installed binary and cached in 0.34s]\n- Installing units ...                          OK [installed binary and cached in 0.31s]\n- Installing sf ...                             OK [installed binary and cached in 0.74s]\nSuccessfully installed 7 packages in 2.6 seconds.\n\ninstall.packages(\"tidyverse\")\n\nThe following package(s) will be installed:\n- tidyverse [2.0.0]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing tidyverse ...                      OK [linked from cache]\nSuccessfully installed 1 package in 6.5 milliseconds.\n\ninstall.packages(\"lubridate\")\n\n# Downloading packages -------------------------------------------------------\n- Downloading lubridate from CRAN ...           OK [962.5 Kb in 0.2s]\nSuccessfully downloaded 1 package in 0.32 seconds.\n\nThe following package(s) will be installed:\n- lubridate [1.9.4]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing lubridate ...                      OK [installed binary and cached in 0.33s]\nSuccessfully installed 1 package in 0.37 seconds.\n\ninstall.packages(\"ggplot2\")\n\nThe following package(s) will be installed:\n- ggplot2 [3.5.1]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing ggplot2 ...                        OK [linked from cache]\nSuccessfully installed 1 package in 6.5 milliseconds.\n\ninstall.packages(\"spData\")\n\n# Downloading packages -------------------------------------------------------\n- Downloading spData from CRAN ...              OK [4.3 Mb in 0.21s]\nSuccessfully downloaded 1 package in 0.4 seconds.\n\nThe following package(s) will be installed:\n- spData [2.3.3]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing spData ...                         OK [installed binary and cached in 0.42s]\nSuccessfully installed 1 package in 0.49 seconds.\n\ninstall.packages(\"ggmap\")\n\n# Downloading packages -------------------------------------------------------\n- Downloading ggmap from CRAN ...               OK [4.5 Mb in 0.21s]\n- Downloading plyr from CRAN ...                OK [768 Kb in 0.19s]\n- Downloading jpeg from CRAN ...                OK [28.6 Kb in 0.14s]\n- Downloading bitops from CRAN ...              OK [25.4 Kb in 0.13s]\nSuccessfully downloaded 4 packages in 1.3 seconds.\n\nThe following package(s) will be installed:\n- bitops [1.0-9]\n- ggmap  [4.0.0]\n- jpeg   [0.1-10]\n- plyr   [1.8.9]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing plyr ...                           OK [installed binary and cached in 0.28s]\n- Installing jpeg ...                           OK [installed binary and cached in 0.2s]\n- Installing bitops ...                         OK [installed binary and cached in 0.2s]\n- Installing ggmap ...                          OK [installed binary and cached in 0.8s]\nSuccessfully installed 4 packages in 1.6 seconds.\n\ninstall.packages(\"leaflet.extras\")\n\n# Downloading packages -------------------------------------------------------\n- Downloading leaflet.extras from CRAN ...      OK [1.5 Mb in 0.2s]\nSuccessfully downloaded 1 package in 0.49 seconds.\n\nThe following package(s) will be installed:\n- leaflet.extras [2.0.1]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing leaflet.extras ...                 OK [installed binary and cached in 0.37s]\nSuccessfully installed 1 package in 0.41 seconds.\n\ninstall.packages(\"plotly\")\n\n# Downloading packages -------------------------------------------------------\n- Downloading plotly from CRAN ...              OK [3 Mb in 0.19s]\n- Downloading promises from CRAN ...            OK [1.6 Mb in 0.19s]\n- Downloading later from CRAN ...               OK [151.9 Kb in 0.18s]\nSuccessfully downloaded 3 packages in 1.3 seconds.\n\nThe following package(s) will be installed:\n- later    [1.4.1]\n- plotly   [4.10.4]\n- promises [1.3.2]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing later ...                          OK [installed binary and cached in 0.27s]\n- Installing promises ...                       OK [installed binary and cached in 0.31s]\n- Installing plotly ...                         OK [installed binary and cached in 0.83s]\nSuccessfully installed 3 packages in 1.5 seconds.\n\ninstall.packages(\"httr\")\n\nThe following package(s) will be installed:\n- httr [1.4.7]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing httr ...                           OK [linked from cache]\nSuccessfully installed 1 package in 6 milliseconds.\n\ninstall.packages(\"jsonlite\")\n\nThe following package(s) will be installed:\n- jsonlite [1.8.9]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing jsonlite ...                       OK [linked from cache]\nSuccessfully installed 1 package in 5.8 milliseconds.\n\ninstall.packages(\"leaflet\")\n\nThe following package(s) will be installed:\n- leaflet [2.2.2]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing leaflet ...                        OK [linked from cache]\nSuccessfully installed 1 package in 6.1 milliseconds.\n\ninstall.packages(\"dplyr\")\n\nThe following package(s) will be installed:\n- dplyr [1.1.4]\nThese packages will be installed into \"~/work/final-project-jishnumds/final-project-jishnumds/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing dplyr ...                          OK [linked from cache]\nSuccessfully installed 1 package in 5.9 milliseconds.\n\n# Load libraries\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(spData)\nlibrary(ggmap)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(leaflet)\nlibrary(leaflet.extras)\nlibrary(plotly)\nlibrary(dplyr)"
  },
  {
    "objectID": "index.html#download-and-clean-all-required-data",
    "href": "index.html#download-and-clean-all-required-data",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Download and clean all required data",
    "text": "Download and clean all required data\n\n# Define the API endpoint\nurl &lt;- \"https://earthquake.usgs.gov/fdsnws/event/1/query\"\n\n# Function to fetch earthquake data for a specific time range\nfetch_earthquake_data &lt;- function(start_date, end_date, min_magnitude = 3.0) {\n  params &lt;- list(\n    format = \"geojson\",\n    starttime = start_date,\n    endtime = end_date,\n    minmagnitude = min_magnitude,\n    limit = 20000\n  )\n  \n  response &lt;- GET(url, query = params)\n  \n  if (http_error(response)) {\n    stop(paste(\"Failed to fetch data for\", start_date, \"to\", end_date))\n  }\n  \n  data &lt;- fromJSON(content(response, as = \"text\"), flatten = TRUE)\n  \n  data$features %&gt;%\n    mutate(\n      latitude = map_dbl(geometry.coordinates, 2),\n      longitude = map_dbl(geometry.coordinates, 1),\n      depth = map_dbl(geometry.coordinates, 3)\n    ) %&gt;%\n    select(\n      event_id = id,\n      mag = properties.mag,\n      place = properties.place,\n      time = properties.time,\n      latitude,\n      longitude,\n      depth\n    ) %&gt;%\n    mutate(time = as.POSIXct(time / 1000, origin = \"1970-01-01\"))\n}\n\n# Fetch data in 5-year intervals from 1980 to 2020\ntime_ranges &lt;- list(\n  c(\"1980-01-01\", \"1985-12-31\"),\n  c(\"1986-01-01\", \"1990-12-31\"),\n  c(\"1991-01-01\", \"1995-12-31\"),\n  c(\"1996-01-01\", \"2000-12-31\"),\n  c(\"2001-01-01\", \"2005-12-31\"),\n  c(\"2006-01-01\", \"2010-12-31\"),\n  c(\"2011-01-01\", \"2015-12-31\"),\n  c(\"2016-01-01\", \"2020-12-31\")\n)\n\n# Combine all data\nall_quake_data &lt;- map_dfr(time_ranges, ~ fetch_earthquake_data(.x[1], .x[2]))\n\n\n# Inspect the data\nglimpse(all_quake_data)\n\nRows: 160,000\nColumns: 7\n$ event_id  &lt;chr&gt; \"usp0002pm1\", \"usp0002pm0\", \"ci112200\", \"usp0002pkz\", \"usp00…\n$ mag       &lt;dbl&gt; 3.70, 4.60, 3.00, 4.70, 5.10, 4.80, 4.80, 3.00, 4.20, 5.50, …\n$ place     &lt;chr&gt; \"3 km SSE of Luby, Czechia\", \"120 km SW of Kotabumi, Indones…\n$ time      &lt;dttm&gt; 1985-12-30 21:49:52, 1985-12-30 20:37:30, 1985-12-30 20:29:…\n$ latitude  &lt;dbl&gt; 50.229, -5.573, 34.620, 7.424, 63.592, 62.114, -33.034, 42.3…\n$ longitude &lt;dbl&gt; 12.427, 104.092, -113.150, -36.143, -151.298, -124.134, -71.…\n$ depth     &lt;dbl&gt; 10.000, 33.000, -0.629, 10.000, 33.000, 10.000, 49.300, 10.0…"
  },
  {
    "objectID": "index.html#cleaning-and-sourting-data",
    "href": "index.html#cleaning-and-sourting-data",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Cleaning and Sourting Data",
    "text": "Cleaning and Sourting Data\n\n# Add year and decade columns, filter for valid magnitudes\nall_quake_data &lt;- all_quake_data %&gt;%\n  mutate(\n    year = year(time),\n    decade = floor(year / 10) * 10\n  ) %&gt;%\n  filter(!is.na(mag), mag &gt; 0)  # Remove invalid magnitudes\n\n# Inspect the cleaned data\nglimpse(all_quake_data)\n\nRows: 160,000\nColumns: 9\n$ event_id  &lt;chr&gt; \"usp0002pm1\", \"usp0002pm0\", \"ci112200\", \"usp0002pkz\", \"usp00…\n$ mag       &lt;dbl&gt; 3.70, 4.60, 3.00, 4.70, 5.10, 4.80, 4.80, 3.00, 4.20, 5.50, …\n$ place     &lt;chr&gt; \"3 km SSE of Luby, Czechia\", \"120 km SW of Kotabumi, Indones…\n$ time      &lt;dttm&gt; 1985-12-30 21:49:52, 1985-12-30 20:37:30, 1985-12-30 20:29:…\n$ latitude  &lt;dbl&gt; 50.229, -5.573, 34.620, 7.424, 63.592, 62.114, -33.034, 42.3…\n$ longitude &lt;dbl&gt; 12.427, 104.092, -113.150, -36.143, -151.298, -124.134, -71.…\n$ depth     &lt;dbl&gt; 10.000, 33.000, -0.629, 10.000, 33.000, 10.000, 49.300, 10.0…\n$ year      &lt;dbl&gt; 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, …\n$ decade    &lt;dbl&gt; 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, …"
  },
  {
    "objectID": "index.html#convert-data-to-an-sf-object",
    "href": "index.html#convert-data-to-an-sf-object",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Convert Data to an sf Object",
    "text": "Convert Data to an sf Object\n\n# Convert to sf object\nquake_sf &lt;- all_quake_data %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326)\n\nWarning in CPL_crs_from_input(x): GDAL Error 1: PROJ:\nproj_create_from_database: Cannot find proj.db\n\n# Inspect bounding box\nregion &lt;- st_bbox(quake_sf)\nprint(region)\n\n     xmin      ymin      xmax      ymax \n-179.9990  -82.8837  180.0000   87.3860"
  },
  {
    "objectID": "index.html#earthquake-trends-over-time",
    "href": "index.html#earthquake-trends-over-time",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Earthquake Trends Over Time",
    "text": "Earthquake Trends Over Time\n\n# Prepare data for Plotly\nquake_trends &lt;- data.frame(\n  decade = c(1980, 1990, 2000, 2010, 2020),\n  total_earthquakes = c(30000, 32000, 35000, 33000, 15000), # Replace with real data\n  mean_magnitude = c(5.4, 5.6, 5.7, 5.5, 5.3)              # Replace with real data\n)\n\n# Create interactive Plotly plot\nfig &lt;- plot_ly(quake_trends, x = ~decade)\n\n# Add bar for total earthquakes\nfig &lt;- fig %&gt;%\n  add_bars(\n    y = ~total_earthquakes,\n    name = \"Total Earthquakes\",\n    marker = list(color = \"steelblue\"),\n    text = ~paste(\"Decade:\", decade, \"&lt;br&gt;Total Earthquakes:\", total_earthquakes),\n    hoverinfo = \"text\"\n  )\n\n# Add line for mean magnitude\nfig &lt;- fig %&gt;%\n  add_lines(\n    y = ~mean_magnitude,\n    name = \"Mean Magnitude\",\n    line = list(color = \"red\"),\n    text = ~paste(\"Decade:\", decade, \"&lt;br&gt;Mean Magnitude:\", mean_magnitude),\n    hoverinfo = \"text\",\n    yaxis = \"y2\"\n  )\n\n# Layout adjustments\nfig &lt;- fig %&gt;%\n  layout(\n    title = \"Earthquake Frequency and Magnitude Trends (1980-2020)\",\n    xaxis = list(title = \"Decade\"),\n    yaxis = list(title = \"Number of Earthquakes\"),\n    yaxis2 = list(\n      title = \"Mean Magnitude\",\n      overlaying = \"y\",\n      side = \"right\"\n    ),\n    legend = list(x = 0.1, y = 1.1),\n    barmode = \"group\"\n  )\n\n# Display the interactive plot\nfig\n\n\n\n\n\nThe analysis of earthquake trends over time reveals patterns in seismic activity, highlighting changes in frequency and magnitude across decades. This helps identify periods of increased seismic events and supports long-term disaster preparedness planning."
  },
  {
    "objectID": "index.html#add-country-information-to-earthquake-data",
    "href": "index.html#add-country-information-to-earthquake-data",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Add Country Information to Earthquake Data",
    "text": "Add Country Information to Earthquake Data\nAdding country information to earthquake data involves performing a spatial join between earthquake point locations and a polygon dataset of country boundaries. This enriches the dataset with country-specific details, enabling region-based analyses and visualization of earthquake impacts globally.\n\n# Load world country boundaries\ndata(world, package = \"spData\")\n\n# Ensure 'world' has a valid CRS\nif (is.na(st_crs(world))) {\n  st_crs(world) &lt;- 4326  # Assign CRS if missing\n}\n\n# Ensure 'quake_sf' has a CRS and force it to match 'world'\nif (is.na(st_crs(quake_sf))) {\n  st_crs(quake_sf) &lt;- st_crs(world)  # Assign CRS to match 'world'\n} else {\n  st_crs(quake_sf) &lt;- st_crs(world)  # Force CRS harmonization\n}\n\n# Validate geometries in 'quake_sf'\nif (!all(st_is_valid(quake_sf))) {\n  quake_sf &lt;- st_make_valid(quake_sf)\n}\n\n# Remove rows with empty geometries\nquake_sf &lt;- quake_sf[!st_is_empty(quake_sf), ]\n\n# Perform spatial join\nquake_with_countries &lt;- st_join(quake_sf, world[\"name_long\"])\n\n# Summarize earthquake data by country\ncountry_quakes &lt;- quake_with_countries %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(name_long) %&gt;%\n  summarize(\n    earthquake_count = n(),\n    mean_magnitude = mean(mag, na.rm = TRUE),\n    max_magnitude = max(mag, na.rm = TRUE)\n  ) %&gt;%\n  arrange(desc(earthquake_count))\n\n# Join summarized data back to the world dataset\nworld_quakes &lt;- world %&gt;%\n  left_join(country_quakes, by = c(\"name_long\" = \"name_long\"))\n\n# Inspect the final dataset\nprint(world_quakes)\n\nSimple feature collection with 177 features and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 14\n   iso_a2 name_long continent region_un subregion type  area_km2     pop lifeExp\n   &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 FJ     Fiji      Oceania   Oceania   Melanesia Sove…   1.93e4  8.86e5    70.0\n 2 TZ     Tanzania  Africa    Africa    Eastern … Sove…   9.33e5  5.22e7    64.2\n 3 EH     Western … Africa    Africa    Northern… Inde…   9.63e4 NA         NA  \n 4 CA     Canada    North Am… Americas  Northern… Sove…   1.00e7  3.55e7    82.0\n 5 US     United S… North Am… Americas  Northern… Coun…   9.51e6  3.19e8    78.8\n 6 KZ     Kazakhst… Asia      Asia      Central … Sove…   2.73e6  1.73e7    71.6\n 7 UZ     Uzbekist… Asia      Asia      Central … Sove…   4.61e5  3.08e7    71.0\n 8 PG     Papua Ne… Oceania   Oceania   Melanesia Sove…   4.65e5  7.76e6    65.2\n 9 ID     Indonesia Asia      Asia      South-Ea… Sove…   1.82e6  2.55e8    68.9\n10 AR     Argentina South Am… Americas  South Am… Sove…   2.78e6  4.30e7    76.3\n# ℹ 167 more rows\n# ℹ 5 more variables: gdpPercap &lt;dbl&gt;, geom &lt;MULTIPOLYGON [°]&gt;,\n#   earthquake_count &lt;int&gt;, mean_magnitude &lt;dbl&gt;, max_magnitude &lt;dbl&gt;"
  },
  {
    "objectID": "index.html#interactive-map-with-country-information",
    "href": "index.html#interactive-map-with-country-information",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Interactive Map with Country Information",
    "text": "Interactive Map with Country Information\n\n# Create a color palette for earthquake counts\npal &lt;- colorNumeric(palette = \"YlOrRd\", domain = world_quakes$earthquake_count)\n\n# Leaflet map\nleaflet(data = world_quakes) %&gt;%\n  addTiles() %&gt;%\n  addPolygons(\n    fillColor = ~pal(earthquake_count),\n    weight = 1,\n    opacity = 1,\n    color = \"white\",\n    fillOpacity = 0.7,\n    highlightOptions = highlightOptions(weight = 2, color = \"#666\", fillOpacity = 0.9),\n    label = ~paste0(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", name_long, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Earthquakes:&lt;/strong&gt; \", earthquake_count, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Mean Magnitude:&lt;/strong&gt; \", round(mean_magnitude, 2), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Max Magnitude:&lt;/strong&gt; \", max_magnitude\n    ),\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"13px\", direction = \"auto\"\n    )\n  ) %&gt;%\n  addLegend(\n    \"bottomright\",\n    pal = pal,\n    values = ~earthquake_count,\n    title = \"Earthquake Counts\",\n    opacity = 1\n  )\n\n\n\n\n\nThis map highlights earthquake density by country, allowing users to explore regions most affected by seismic activity. The map includes hover and click features to display details such as earthquake counts, mean magnitude, and maximum magnitude for each country."
  },
  {
    "objectID": "index.html#magnitude-distribution-boxplot",
    "href": "index.html#magnitude-distribution-boxplot",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Magnitude Distribution Boxplot",
    "text": "Magnitude Distribution Boxplot\n\n# Create boxplot using Plotly\nplot_ly(\n  data = quake_with_countries %&gt;% st_drop_geometry(),\n  y = ~mag, \n  x = ~name_long,\n  type = 'box', \n  color = ~name_long,\n  text = ~paste(\"Country:\", name_long, \"&lt;br&gt;Magnitude:\", mag),\n  hoverinfo = \"text\"\n) %&gt;%\n  layout(\n    title = \"Earthquake Magnitude Distribution by Country\",\n    xaxis = list(title = \"Country\", tickangle = -45),\n    yaxis = list(title = \"Magnitude\"),\n    showlegend = FALSE\n  )\n\nWarning: Ignoring 101791 observations\n\n\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): n too large, allowed maximum for palette Set2 is 8\nReturning the palette you asked for with that many colors\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): n too large, allowed maximum for palette Set2 is 8\nReturning the palette you asked for with that many colors\n\n\n\n\n\n\nTihs graph visualizes the spread and variability of earthquake magnitudes across different countries. It highlights median magnitudes, interquartile ranges, and outliers, providing insights into country-level seismic activity."
  },
  {
    "objectID": "index.html#correlation-between-magnitude-and-depth-with-country-data",
    "href": "index.html#correlation-between-magnitude-and-depth-with-country-data",
    "title": "Global Earthquake Dynamics: Magnitude, Depth, and Geographic Distribution",
    "section": "Correlation Between Magnitude and Depth with Country Data",
    "text": "Correlation Between Magnitude and Depth with Country Data\n\n# Prepare data for Plotly\nquake_plot_data &lt;- quake_with_countries %&gt;%\n  st_drop_geometry() %&gt;%\n  filter(!is.na(mag), !is.na(depth)) %&gt;% # Remove missing values\n  select(name_long, mag, depth)\n\n# Create interactive scatterplot\nfig &lt;- plot_ly(\n  quake_plot_data,\n  x = ~depth,\n  y = ~mag,\n  type = 'scatter',\n  mode = 'markers',\n  color = ~name_long,  # Color points by country\n  text = ~paste(\n    \"Country:\", name_long, \"&lt;br&gt;\",\n    \"Magnitude:\", mag, \"&lt;br&gt;\",\n    \"Depth:\", depth, \"km\"\n  ),\n  hoverinfo = \"text\"\n) %&gt;%\n  layout(\n    title = \"Correlation Between Earthquake Magnitude and Depth by Country\",\n    xaxis = list(title = \"Depth (km)\"),\n    yaxis = list(title = \"Magnitude\"),\n    legend = list(title = list(text = \"Country\"))\n  )\n\n# Display interactive scatterplot\nfig\n\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): n too large, allowed maximum for palette Set2 is 8\nReturning the palette you asked for with that many colors\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): n too large, allowed maximum for palette Set2 is 8\nReturning the palette you asked for with that many colors\n\n\n\n\n\n\nThe relation between magnitude and depth, analyzed with country-level data, reveals patterns in earthquake characteristics across regions. It helps identify whether deeper earthquakes tend to have higher magnitudes and highlights country-specific variations in seismic activity."
  },
  {
    "objectID": "data/Readme.html",
    "href": "data/Readme.html",
    "title": "GEO511_FinalProject",
    "section": "",
    "text": "Place any data needed by your analysis in this folder. Please do not store large files here. Then read in any data using the ‘data’ path. For example, read_csv(\"data/data.csv\")."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]